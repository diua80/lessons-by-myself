// const userAnswer = prompt("–í–≤–µ–¥—ñ—Ç—å –æ—Ñ—ñ—Ü—ñ–π–Ω—É –Ω–∞–∑–≤—É JS");
// if (userAnswer === " ") {
//     alert("–ü—Ä–∞–≤–∏–ª—å–Ω–æ!");
// } else {
//     alert("–ù–µ –∑–Ω–∞—î—Ç–µ! ECMAScript!");
// }

// const hours = 14;
// const minutes = 26;
// let time = "";
// if (minutes === 0) time = `${hours} –≥`;
// else time = `${hours} –≥. ${minutes} —Ö–≤.`
// console.log(time);
// const user = {
//     name: "Mango",
//     age: 25,
//     hobby: "html",
//     premium: true,
// }

// user.mood="happy";
// user["mood"] = "happy";
// console.log("üöÄ ~ file: index.js:22 ~ user:", user)
// for (const key in user) {
//    console.log(`${key}: ${user[key]}`)
// }
// console.log(Object.keys(user));
// for (const key of Object.keys(user)) {
//     console.log(`${key}: ${user[key]}`);
// }

// const salaries = {
//     Piter: 5500,
//     Victory: 6600,
//     Iryna: 77700,
// }
// console.log(Object.values(salaries));
// let sum = 0;
// for (const salarie of Object.values(salaries)) {
//     sum += salarie;
// }
// console.log(sum);

// const stones = [
//     { name: "ametist", price: 800, quantity: 4 },
//     { name: "perl", price: 1800, quantity: 3 },
//     { name: "rubin", price: 2300, quantity: 1 },
// ];

// function calcTotalPrice(stones, stoneName) {
//     for (const stone of stones) {
//         if (stone.name === stoneName) {
//             return stone.price * stone.quantity;
//         }
//     }
//     return alert("–¢–∞–∫–æ–≥–æ –Ω–µ —ñ—Å–Ω—É—î");
// };
// const total = calcTotalPrice(stones, "—â–µ–±–µ–Ω—å");
// console.log(total);

// const TRANSACTIONS = {
//     DEPOSIT: "deposit",
//     WITHDRAW: "withdraw",
// }

// const account = {
//     balance: 0,

    //!===–Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
    // transactions: [],

    //!===–ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
    //!===–ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç–∞ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
    //!===–ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è - —Ü–µ –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏: id, type, amount


    //!===–¥–æ–¥–∞—î —Å—É–º—É –¥–æ –±–∞–ª–∞–Ω—Å—É
    //!===–ø—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
    //!===–≤–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ CreateTransaction, –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
    //!===–ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
    // deposit(amount) {
    //     this.balance += amount;
    //     const transaction = this.createTransaction(amount, TRANSACTIONS.DEPOSIT);
    //     this.transactions.push(transaction);
    // },
    // withdraw(amount) {
    //     if (amount > this.balance) {
    //         console.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤!");
    //         return;
    //     }
    //     this.balance -= amount;
    //     const transaction = this.createTransaction(amount, TRANSACTIONS.WITHDRAW);
    //     this.transactions.push(transaction); 
    // },

    //!===–§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å
//     getBalance() {
//         return this.balance;
//     },

//     getTransactionDetails(id) {
//         for (const transaction of this.transactions) {
//             if (id === transaction.id) {
//                 return transaction;
//             }
//         }
//         return [];
//     },

//     getTransactionTotal(type) {
//         let sum = 0;
//         for (const transaction of this.transactions) {
//             if (type === transaction.type) {
//                 sum += transaction.amount;
//             }
//         }
//         return sum;
//     },
// }

// console.log(account.createTransaction(100, TRANSACTIONS.DEPOSIT));
// account.deposit(500);
// account.deposit(400);
// account.withdraw(1000);

// console.log(account.transactions);
// console.log(account.getBalance());
// console.log(account.getTransactionDetails(2));
// console.log(account.getTransactionTotal(TRANSACTIONS.DEPOSIT));

// const user = {
//     email: "mango@mail.com",
//     age: 20,
// };
// const { userName = "User" } = user;
// console.log(userName);
// console.log(user);

// class User{
//     #login;
//     #email;
//     constructor({ login, email }) {
//         this.#login = login;
//         this.#email = email;
//     }

//     get login() {
//         return "—Ö–∞-—Ö–∞ –ø—Ä–∏–≤–∞—Ç–Ω–µ –ø–æ–ª–µ";
//     }
// }

// const mango = new User({
//     login: "Mango",
//     email: "mango@dog.woof",
// });

// console.log(mango);
// console.log(mango.login);
// mango.login = "MAngodog";
// console.log(mango.login);


// 
// –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
// const refs = {
//     overlay: document.getElementById("overlay"),
//     modalWindow: document.getElementById("modalWindow"),
//     modalCloseBtn: document.getElementById("modalCloseBtn"),
//     modalOpenBtn: document.getElementById("openModalBtn"),
// }


// const openClass = "open";

// refs.modalOpenBtn.addEventListener("click", modalOpen);
// refs.modalCloseBtn.addEventListener("click", modalClose);
// window.addEventListener("keydown", closeModalOnEsc);

// // –∑–∞—Ä–∞–∑ –Ω–∞ body –Ω–µ–º–∞ –∫–ª–∞—Å—É "open", –∞ –º–∏ –π–æ–≥–æ –∑–∞–¥–∞–º–æ
// function modalOpen() {
//     document.body.classList.add(openClass); //–¥–æ–¥–∞—î –∫–ª–∞—Å "open"
// }
// function modalClose() {
//     document.body.classList.remove(openClass); //–¥–æ–¥–∞—î –∫–ª–∞—Å "open"
// }

// function closeModalOnEsc(ev) {
//     if (ev.code === "Escape") {
//         modalClose();
//     }
// }

// –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä - –∑–∞–¥–∞—á–∞

const refs = {
    form: document.getElementById("form"),
    price: document.getElementById("price"),
    amount: document.getElementById("amount"),
    quantity: document.getElementById("quantity"),
    total: document.getElementById("total"),
}

// —Ü–µ–π –æ–±'—î–∫—Ç –±—É–¥–µ –∫–µ—Ä—É–≤–∞—Ç–∏ —Ä–∞—Ö—É–Ω–∫–æ–º totalPrice, –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –±–∞–≥–∞—Ç–æ —Ñ—É–Ω–∫—Ü—ñ–π, –º–æ–∂–Ω–∞ –æ–±—ñ–π—Ç–∏—Å—å —Ç–∞–∫–∏–º –æ—Ç –æ–±'—î–∫—Ç–æ–º.
// —Ç–µ–ø–µ—Ä –∫–æ–ª–∏ –≤—ñ–Ω —î –π–æ–≥–æ —Ç—Ä–µ–±–∞ –Ω–∞–ø–æ–≤–Ω–∏—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –¥—ñ–π—Å–Ω–∏–º–∏, —è–∫ —Ü–µ –∑—Ä–æ–±–∏—Ç–∏..
// —è–∫—â–æ –≤–∏–Ω–∏–∫–∞—î —è–∫–∞—Å—å –ø–æ–¥—ñ—è! —Ç—Ä–µ–±–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –º–µ—Ç–æ–¥ calcTotalPrice, –∞ —â–æ–± —É –ø–æ–ª—è price —Ç–∞ quantity –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –∞–∫—Ç—É–∞–ª—å–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
// —Å—Ç–≤–æ—Ä–∏–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –±—É–¥–µ –æ–Ω–æ–≤–ª—è—Ç–∏ –ø–æ–ª—è —Ü—å–æ–≥–æ –æ–±'—î–∫—Ç—É, –±–µ—Ä—É—á–∏ —ó—Ö –∑ –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ input-–æ–≤.

const data = {
    price: 0,
    quantity: 0,
    calcTotalPrice() {
        return Number((this.price * this.quantity).toFixed(2));
    },
}
fillData();//—Ç—É—Ç –º–∏ –Ω–µ –∑ –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ –±–µ—Ä–µ–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∞ –∑ –∑–≤–∏—á–∞–π–Ω–æ–≥–æ value.. —ñ —Ü–µ –±—É–¥–µ —Ç–∏–ø –¥–∞–Ω–∏—Ö "string", —Ç–æ–º—É —Ç—Ä–µ–±–∞ –æ–±–µ—Ä–Ω—É—Ç–∏ —É Number..
console.log(data);
displayTotal();
refs.amount.textContent = data.quantity;

refs.form.addEventListener("input", handleFormInput); // –≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É—î–º–æ –±—É–¥—å —è–∫—ñ –∑–º—ñ–Ω–∏ –Ω–∞ —Ñ–æ—Ä–º—ñ, —è–∫—ñ –º–æ–∂—É—Ç—å –≤—ñ–¥–±—É—Ç–∏—Å—å —É –≤—Å—ñ—Ö input-–∞—Ö;

function handleFormInput({ target }) {
    const { value } = target;
    // console.log(target, value);
    if (target === refs.quantity) {
        refs.amount.textContent = value;
    }
    target.setAttribute("value", value); // –ó–º—ñ–Ω—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∞—Ç—Ä–∏–±—É—Ç—É "value", –Ω–∞ –∑–Ω–∞—á–µ–Ω–Ω—è value –∑ –æ–±'—î–∫—Ç—É, —â–æ —î target-–æ–º.
    fillData();
    displayTotal();
}

// —É —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–µ –±—É–¥–µ –Ω–∞ –≤—Ö–æ–¥—ñ event-—É –±–æ –≤—ñ–Ω —î —É –∫–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—è—Ö
function fillData() {
    data.price = Number(refs.price.value);
    data.quantity = Number(refs.quantity.value);
}

// —Å—Ç–≤–æ—Ä–∏–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –±—É–¥–µ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è <p> –∑ —Ü–∏—Ñ—Ä–æ—é –∑–∞–≥–∞–ª—å–Ω–æ—é –≤–∞—Ä—Ç–æ—Å—Ç—ñ, –≤–∂–µ –ø—ñ–¥—Ä–∞—Ö–æ–≤–∞–Ω–æ—ó. –Ü –Ω–µ –∑–∞–±—É–≤–∞—î–º–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏
// —Ü—é —Ñ—É–Ω–∫—Ü—ñ—é —É –ø–æ—Ç—Ä—ñ–±–Ω–æ–º—É –º—ñ—Å—Ü—ñ.. –¥–µ –≤–æ–Ω–æ?
function displayTotal() {    
    refs.total.textContent=data.calcTotalPrice() + "–≥—Ä–Ω";
};