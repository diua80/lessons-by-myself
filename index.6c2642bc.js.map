{"mappings":"","sources":["src/index.js"],"sourcesContent":["// const userAnswer = prompt(\"–í–≤–µ–¥—ñ—Ç—å –æ—Ñ—ñ—Ü—ñ–π–Ω—É –Ω–∞–∑–≤—É JS\");\n// if (userAnswer === \" \") {\n//     alert(\"–ü—Ä–∞–≤–∏–ª—å–Ω–æ!\");\n// } else {\n//     alert(\"–ù–µ –∑–Ω–∞—î—Ç–µ! ECMAScript!\");\n// }\n\n// const hours = 14;\n// const minutes = 26;\n// let time = \"\";\n// if (minutes === 0) time = `${hours} –≥`;\n// else time = `${hours} –≥. ${minutes} —Ö–≤.`\n// console.log(time);\n// const user = {\n//     name: \"Mango\",\n//     age: 25,\n//     hobby: \"html\",\n//     premium: true,\n// }\n\n// user.mood=\"happy\";\n// user[\"mood\"] = \"happy\";\n// console.log(\"üöÄ ~ file: index.js:22 ~ user:\", user)\n// for (const key in user) {\n//    console.log(`${key}: ${user[key]}`)\n// }\n// console.log(Object.keys(user));\n// for (const key of Object.keys(user)) {\n//     console.log(`${key}: ${user[key]}`);\n// }\n\n// const salaries = {\n//     Piter: 5500,\n//     Victory: 6600,\n//     Iryna: 77700,\n// }\n// console.log(Object.values(salaries));\n// let sum = 0;\n// for (const salarie of Object.values(salaries)) {\n//     sum += salarie;\n// }\n// console.log(sum);\n\n// const stones = [\n//     { name: \"ametist\", price: 800, quantity: 4 },\n//     { name: \"perl\", price: 1800, quantity: 3 },\n//     { name: \"rubin\", price: 2300, quantity: 1 },\n// ];\n\n// function calcTotalPrice(stones, stoneName) {\n//     for (const stone of stones) {\n//         if (stone.name === stoneName) {\n//             return stone.price * stone.quantity;\n//         }\n//     }\n//     return alert(\"–¢–∞–∫–æ–≥–æ –Ω–µ —ñ—Å–Ω—É—î\");\n// };\n// const total = calcTotalPrice(stones, \"—â–µ–±–µ–Ω—å\");\n// console.log(total);\n\n// const TRANSACTIONS = {\n//     DEPOSIT: \"deposit\",\n//     WITHDRAW: \"withdraw\",\n// }\n\n// const account = {\n//     balance: 0,\n\n    //!===–Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π\n    // transactions: [],\n\n    //!===–ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.\n    //!===–ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç–∞ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.\n    //!===–ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è - —Ü–µ –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏: id, type, amount\n\n\n    //!===–¥–æ–¥–∞—î —Å—É–º—É –¥–æ –±–∞–ª–∞–Ω—Å—É\n    //!===–ø—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó\n    //!===–≤–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ CreateTransaction, –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó\n    //!===–ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π\n    // deposit(amount) {\n    //     this.balance += amount;\n    //     const transaction = this.createTransaction(amount, TRANSACTIONS.DEPOSIT);\n    //     this.transactions.push(transaction);\n    // },\n    // withdraw(amount) {\n    //     if (amount > this.balance) {\n    //         console.error(\"–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤!\");\n    //         return;\n    //     }\n    //     this.balance -= amount;\n    //     const transaction = this.createTransaction(amount, TRANSACTIONS.WITHDRAW);\n    //     this.transactions.push(transaction); \n    // },\n\n    //!===–§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å\n//     getBalance() {\n//         return this.balance;\n//     },\n\n//     getTransactionDetails(id) {\n//         for (const transaction of this.transactions) {\n//             if (id === transaction.id) {\n//                 return transaction;\n//             }\n//         }\n//         return [];\n//     },\n\n//     getTransactionTotal(type) {\n//         let sum = 0;\n//         for (const transaction of this.transactions) {\n//             if (type === transaction.type) {\n//                 sum += transaction.amount;\n//             }\n//         }\n//         return sum;\n//     },\n// }\n\n// console.log(account.createTransaction(100, TRANSACTIONS.DEPOSIT));\n// account.deposit(500);\n// account.deposit(400);\n// account.withdraw(1000);\n\n// console.log(account.transactions);\n// console.log(account.getBalance());\n// console.log(account.getTransactionDetails(2));\n// console.log(account.getTransactionTotal(TRANSACTIONS.DEPOSIT));\n\n// const user = {\n//     email: \"mango@mail.com\",\n//     age: 20,\n// };\n// const { userName = \"User\" } = user;\n// console.log(userName);\n// console.log(user);\n\n// class User{\n//     #login;\n//     #email;\n//     constructor({ login, email }) {\n//         this.#login = login;\n//         this.#email = email;\n//     }\n\n//     get login() {\n//         return \"—Ö–∞-—Ö–∞ –ø—Ä–∏–≤–∞—Ç–Ω–µ –ø–æ–ª–µ\";\n//     }\n// }\n\n// const mango = new User({\n//     login: \"Mango\",\n//     email: \"mango@dog.woof\",\n// });\n\n// console.log(mango);\n// console.log(mango.login);\n// mango.login = \"MAngodog\";\n// console.log(mango.login);\n\n\n// \n// –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ\n"],"names":[],"version":3,"file":"index.6c2642bc.js.map"}